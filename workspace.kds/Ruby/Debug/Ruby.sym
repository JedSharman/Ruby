00000000 R __flash_start
00000000 A __RAM_VECTOR_TABLE_SIZE_BYTES
00000000 R __VECTOR_RAM
00000000 R __vector_table
00000188 R __VECTOR_TABLE_END
00000400 R securityInfo
00000464 T _mainCRTStartup
00000464 T _start
000004d8 T Reset_Handler
0000051c T __aeabi_drsub
00000524 T __aeabi_dsub
00000524 T __subdf3
00000528 T __adddf3
00000528 T __aeabi_dadd
000007a0 T __aeabi_ui2d
000007a0 T __floatunsidf
000007c0 T __aeabi_i2d
000007c0 T __floatsidf
000007e4 T __aeabi_f2d
000007e4 T __extendsfdf2
00000820 T __aeabi_ul2d
00000820 T __floatundidf
00000830 T __aeabi_l2d
00000830 T __floatdidf
0000088c T __aeabi_dmul
0000088c T __muldf3
00000ae0 T __aeabi_ddiv
00000ae0 T __divdf3
00000cb0 T __gedf2
00000cb0 T __gtdf2
00000cb8 T __ledf2
00000cb8 T __ltdf2
00000cc0 T __cmpdf2
00000cc0 T __eqdf2
00000cc0 T __nedf2
00000d3c T __aeabi_cdrcmple
00000d4c T __aeabi_cdcmpeq
00000d4c T __aeabi_cdcmple
00000d5c T __aeabi_dcmpeq
00000d70 T __aeabi_dcmplt
00000d84 T __aeabi_dcmple
00000d98 T __aeabi_dcmpge
00000dac T __aeabi_dcmpgt
00000dc0 T __aeabi_d2iz
00000dc0 T __fixdfsi
00000e10 T __aeabi_d2uiz
00000e10 T __fixunsdfsi
00000e50 T __aeabi_d2f
00000e50 T __truncdfsf2
00000ef0 T __aeabi_uldivmod
00000f1c T __gnu_ldivmod_helper
00000f4c T __gnu_uldivmod_helper
00000f7c W __aeabi_idiv0
00000f7c W __aeabi_ldiv0
00000f80 T __divdi3
00001218 T __udivdi3
000014d0 W USBDM::SimInfo::getUart0Clock()
000014e8 W USBDM::Uart0Info::getInputClockFrequency()
000014f8 W USBDM::Uart0Info::initPCRs(unsigned long)
00001524 W USBDM::FormattedIO::FormattedIO()
00001524 W USBDM::FormattedIO::FormattedIO()
0000156c W USBDM::FormattedIO::~FormattedIO()
0000156c W USBDM::FormattedIO::~FormattedIO()
00001594 W USBDM::FormattedIO::~FormattedIO()
000015b4 W USBDM::FormattedIO::peek()
0000163c W USBDM::FormattedIO::writeChar(char)
00001660 W USBDM::FormattedIO::readChar()
00001688 W USBDM::FormattedIO::write(char)
000016a8 W USBDM::FormattedIO::setEcho(USBDM::EchoMode)
000016c8 W USBDM::Uart::_isCharAvailable()
000016f4 W USBDM::Uart::_readChar()
00001734 W USBDM::Uart::_writeChar(char)
00001778 W USBDM::Uart::Uart(UART_Type volatile*)
00001778 W USBDM::Uart::Uart(UART_Type volatile*)
000017a4 W USBDM::Uart::~Uart()
000017a4 W USBDM::Uart::~Uart()
000017d4 W USBDM::Uart::~Uart()
000017f4 W USBDM::Uart::setBaudRate_brfa(unsigned long, unsigned long)
00001880 W USBDM::Uart::flushOutput()
000018b0 W USBDM::Uart::flushInput()
000018d0 T console_initialise
000018ec T console_txChar
0000190c T console_rxChar
00001920 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::Uart_brfa_T(unsigned int)
00001920 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::Uart_brfa_T(unsigned int)
00001950 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::setBaudRate(unsigned int)
00001974 W USBDM::Uart_T<USBDM::Uart0Info>::Uart_T()
00001974 W USBDM::Uart_T<USBDM::Uart0Info>::Uart_T()
000019c0 W USBDM::Uart_T<USBDM::Uart0Info>::~Uart_T()
000019c0 W USBDM::Uart_T<USBDM::Uart0Info>::~Uart_T()
000019f0 W USBDM::Uart_T<USBDM::Uart0Info>::~Uart_T()
00001a50 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::~Uart_brfa_T()
00001a50 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::~Uart_brfa_T()
00001a80 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::~Uart_brfa_T()
00001aa0 W USBDM::Uart_T<USBDM::Uart0Info>::clearError()
00001b54 W USBDM::Osc0Info::getOscClock()
00001b68 W USBDM::Osc0Info::initPCRs(unsigned long)
00001b90 W USBDM::RtcInfo::getInternalClock()
00001bb8 W USBDM::McgInfo::getErcClock()
00001be8 W USBDM::McgInfo::getInternalIrcClock()
00001c30 W USBDM::SimInfo::initRegs()
00001ca4 W USBDM::Mcg::setSysDividers(unsigned long)
00001cc8 W USBDM::Mcg::enableNvicInterrupts(bool, unsigned long)
00001cf8 W USBDM::Mcg::initialise()
00001d04 T USBDM::Mcg::clockTransition(USBDM::McgInfo::ClockInfo const&)
00001ff0 T USBDM::Mcg::SystemCoreClockUpdate()
0000225c T USBDM::Mcg::defaultConfigure()
00002288 T clock_initialise
0000229c W USBDM::OscBase_T<USBDM::Osc0Info>::initialise()
000022a8 W USBDM::RtcBase_T<USBDM::RtcInfo>::initialise()
000022b4 W USBDM::OscBase_T<USBDM::Osc0Info>::defaultConfigure()
000022cc W USBDM::RtcBase_T<USBDM::RtcInfo>::defaultConfigure()
000022f0 W _close
00002308 W _fstat
00002328 W _getpid
00002338 W _isatty
00002364 W _kill
00002388 W _lseek
000023a4 W _sbrk
000023f8 W _exit
00002404 T _read
00002404 T _usbdm_read
0000245c T _usbdm_write
0000245c T _write
000024bc W __cxa_pure_virtual
000024c8 W rtc_initialise
000024d4 W software_init_hook
000024e0 T SystemInitLowLevel
00002524 T SystemInit
00002554 W USBDM::PmcBase_T<USBDM::PmcInfo>::releasePins()
00002574 W USBDM::FormattedIO::setPadding(USBDM::Padding)
00002594 W USBDM::FormattedIO::setWidth(int)
000025b4 W USBDM::FormattedIO::ultoa(char*, unsigned long, USBDM::Radix, USBDM::Padding, int, bool)
00002710 W USBDM::FormattedIO::writeln()
0000272c W USBDM::FormattedIO::write(char const*)
0000275c W USBDM::FormattedIO::writeln(char const*)
00002780 W USBDM::FormattedIO::write(unsigned long, USBDM::Radix)
000027c0 W USBDM::FormattedIO::writeln(unsigned long, USBDM::Radix)
000027ec W USBDM::FormattedIO::writeln(void const*, USBDM::Radix)
00002814 W USBDM::FormattedIO::writeln(unsigned int, USBDM::Radix)
00002838 W ADC0_IRQHandler
00002838 W ADC1_IRQHandler
00002838 W BusFault_Handler
00002838 W CAN0_BusOff_IRQHandler
00002838 W CAN0_Error_IRQHandler
00002838 W CAN0_Message_IRQHandler
00002838 W CAN0_Rx_IRQHandler
00002838 W CAN0_Tx_IRQHandler
00002838 W CAN0_WakeUp_IRQHandler
00002838 W CMP0_IRQHandler
00002838 W CMP1_IRQHandler
00002838 W CMP2_IRQHandler
00002838 W CMT_IRQHandler
00002838 W DAC0_IRQHandler
00002838 W DAC1_IRQHandler
00002838 W DebugMon_Handler
00002838 T Default_Handler
00002838 W DMA_Error_IRQHandler
00002838 W DMA0_IRQHandler
00002838 W DMA1_IRQHandler
00002838 W DMA10_IRQHandler
00002838 W DMA11_IRQHandler
00002838 W DMA12_IRQHandler
00002838 W DMA13_IRQHandler
00002838 W DMA14_IRQHandler
00002838 W DMA15_IRQHandler
00002838 W DMA2_IRQHandler
00002838 W DMA3_IRQHandler
00002838 W DMA4_IRQHandler
00002838 W DMA5_IRQHandler
00002838 W DMA6_IRQHandler
00002838 W DMA7_IRQHandler
00002838 W DMA8_IRQHandler
00002838 W DMA9_IRQHandler
00002838 W FTF_Command_IRQHandler
00002838 W FTF_ReadCollision_IRQHandler
00002838 W FTM0_IRQHandler
00002838 W FTM1_IRQHandler
00002838 W FTM2_IRQHandler
00002838 W FTM3_IRQHandler
00002838 W I2C0_IRQHandler
00002838 W I2C1_IRQHandler
00002838 W I2C2_IRQHandler
00002838 W I2S0_Rx_IRQHandler
00002838 W I2S0_Tx_IRQHandler
00002838 W LLWU_IRQHandler
00002838 W LPTMR0_IRQHandler
00002838 W MCG_IRQHandler
00002838 W MCM_IRQHandler
00002838 W MemManage_Handler
00002838 W NMI_Handler
00002838 W PDB0_IRQHandler
00002838 W PendSV_Handler
00002838 W PMC_IRQHandler
00002838 W PORTA_IRQHandler
00002838 W PORTB_IRQHandler
00002838 W PORTC_IRQHandler
00002838 W PORTD_IRQHandler
00002838 W PORTE_IRQHandler
00002838 W RTC_Alarm_IRQHandler
00002838 W RTC_Seconds_IRQHandler
00002838 W SDHC_IRQHandler
00002838 W SPI0_IRQHandler
00002838 W SPI1_IRQHandler
00002838 W SPI2_IRQHandler
00002838 W SVC_Handler
00002838 W SWI_IRQHandler
00002838 W SysTick_Handler
00002838 W UART0_Error_IRQHandler
00002838 W UART0_RxTx_IRQHandler
00002838 W UART1_Error_IRQHandler
00002838 W UART1_RxTx_IRQHandler
00002838 W UART2_Error_IRQHandler
00002838 W UART2_RxTx_IRQHandler
00002838 W UART3_Error_IRQHandler
00002838 W UART3_RxTx_IRQHandler
00002838 W UART4_Error_IRQHandler
00002838 W UART4_RxTx_IRQHandler
00002838 W UART5_Error_IRQHandler
00002838 W UART5_RxTx_IRQHandler
00002838 W UsageFault_Handler
00002838 W USB0_IRQHandler
00002838 W USBDCD_IRQHandler
00002838 W WDOG_IRQHandler
00002858 W HardFault_Handler
0000286c T _HardFault_Handler
00002a54 W USBDM::PitChannel_T<USBDM::PitInfo, 0>::irqHandler()
00002a70 W USBDM::PitChannel_T<USBDM::PitInfo, 1>::irqHandler()
00002a8c W USBDM::PitChannel_T<USBDM::PitInfo, 2>::irqHandler()
00002aa8 W USBDM::PitChannel_T<USBDM::PitInfo, 3>::irqHandler()
00002bf4 W USBDM::Adc1Info::initPCRs(unsigned long)
00002c1c W USBDM::Adc1Info::InfoDP::initPCRs(unsigned long)
00002c30 W USBDM::Adc1Info::InfoDM::initPCRs(unsigned long)
00002c44 W USBDM::Dac0Info::initPCRs(unsigned long)
00002c58 W USBDM::Ftm0Info::getInputClockFrequency()
00002c98 W USBDM::Ftm0Info::initPCRs(unsigned long)
00002ce8 W USBDM::Ftm1Info::initPCRs(unsigned long)
00002cfc W USBDM::Ftm1Info::InfoQUAD::initPCRs(unsigned long)
00002d28 W USBDM::Ftm2Info::initPCRs(unsigned long)
00002d3c W USBDM::Ftm2Info::InfoQUAD::initPCRs(unsigned long)
00002d68 W USBDM::FtmBase::unhandledCallback()
00002d74 W USBDM::FormattedIO::write(long, USBDM::Radix)
00002dcc W USBDM::FormattedIO::writeln(long, USBDM::Radix)
00002df8 W USBDM::FormattedIO::write(int, USBDM::Radix)
00002e1c W USBDM::FormattedIO::writeln(int, USBDM::Radix)
00002e40 W MotorSupplySensor::motorVoltage()
00002e68 W MotorSupplySensor::isOK()
00002e8c W MotorSupplySensor::initialise()
00002f1c T stopHere()
00002f34 T shutDown()
00002fb8 T controller()
00002fe0 T initialisePids()
00003108 T checkMotorSupply()
000031c4 T initialise()
00003224 T ControlUpdate(int)
00003448 T main
00003668 W USBDM::AdcBase_T<USBDM::Adc1Info>::calibrate()
0000377c W std::vector<int, std::allocator<int> >::vector()
0000377c W std::vector<int, std::allocator<int> >::vector()
00003798 W std::vector<char, std::allocator<char> >::vector()
00003798 W std::vector<char, std::allocator<char> >::vector()
000037b4 W Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed(float)
0000386c W Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed(float)
00003924 W Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPosition()
00003934 W Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPosition()
00003944 W Gripper<USBDM::Ftm0Info, 7, USBDM::GpioE<0, (USBDM::Polarity)1>, USBDM::GpioE<1, (USBDM::Polarity)1> >::open()
00003964 W Gripper<USBDM::Ftm0Info, 1, USBDM::GpioC<0, (USBDM::Polarity)1>, USBDM::GpioC<1, (USBDM::Polarity)1> >::open()
00003984 W Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat()
0000399c W PID::PID()
0000399c W PID::PID()
000039b4 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::PID_T(double, double, double, double, double, double, bool)
000039b4 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::PID_T(double, double, double, double, double, double, bool)
00003a64 W Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat()
00003a7c W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::PID_T(double, double, double, double, double, double, bool)
00003a7c W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::PID_T(double, double, double, double, double, double, bool)
00003b2c W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 9, (USBDM::Polarity)1>::set()
00003b44 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::update()
00003d40 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::update()
00003f3c W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 9, (USBDM::Polarity)1>::clear()
00003f54 W USBDM::PitBase_T<USBDM::PitInfo>::configure(USBDM::PitDebugMode)
00003f74 W USBDM::PitChannel_T<USBDM::PitInfo, 0>::setCallback(void (*)())
00003fa8 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::setSetpoint(double)
00004000 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::enable(bool)
00004054 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::setSetpoint(double)
000040ac W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::enable(bool)
00004100 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::getSetpoint()
00004124 W Gripper<USBDM::Ftm0Info, 7, USBDM::GpioE<0, (USBDM::Polarity)1>, USBDM::GpioE<1, (USBDM::Polarity)1> >::calibrate()
0000415c W Gripper<USBDM::Ftm0Info, 1, USBDM::GpioC<0, (USBDM::Polarity)1>, USBDM::GpioC<1, (USBDM::Polarity)1> >::calibrate()
00004194 W USBDM::QuadEncoder_T<USBDM::Ftm1Info>::resetPosition()
000041ac W USBDM::QuadEncoder_T<USBDM::Ftm2Info>::resetPosition()
000041c4 W Gripper<USBDM::Ftm0Info, 7, USBDM::GpioE<0, (USBDM::Polarity)1>, USBDM::GpioE<1, (USBDM::Polarity)1> >::initialise()
00004218 W Gripper<USBDM::Ftm0Info, 1, USBDM::GpioC<0, (USBDM::Polarity)1>, USBDM::GpioC<1, (USBDM::Polarity)1> >::initialise()
0000426c W Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::initialise()
000042e0 W Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::initialise()
00004354 W USBDM::Dac_T<USBDM::Dac0Info>::enable(unsigned long, unsigned long, unsigned long)
000043ac W Gripper<USBDM::Ftm0Info, 7, USBDM::GpioE<0, (USBDM::Polarity)1>, USBDM::GpioE<1, (USBDM::Polarity)1> >::close()
000043c4 W Gripper<USBDM::Ftm0Info, 1, USBDM::GpioC<0, (USBDM::Polarity)1>, USBDM::GpioC<1, (USBDM::Polarity)1> >::close()
000043dc W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 9, (USBDM::Polarity)1>::setOutput(unsigned long)
00004404 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 11, (USBDM::Polarity)1>::setOutput(unsigned long)
0000442c W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::getIsSteadyState(int)
000044b8 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::getIsSteadyState(int)
00004544 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::getSetpoint()
00004568 W std::vector<int, std::allocator<int> >::~vector()
00004568 W std::vector<int, std::allocator<int> >::~vector()
000045a0 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::setSpeed>::setTunings(double, double, double)
00004640 W PID_T<&Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::getPositionAsFloat, &Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::setSpeed>::setTunings(double, double, double)
000046e0 W USBDM::AdcBase_T<USBDM::Adc1Info>::readAnalogue(int)
00004724 W USBDM::AdcBase_T<USBDM::Adc1Info>::enable()
00004754 W std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
00004754 W std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0000476c W std::_Vector_base<int, std::allocator<int> >::_Vector_base()
0000476c W std::_Vector_base<int, std::allocator<int> >::_Vector_base()
00004788 W std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
00004788 W std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
000047c0 W std::_Vector_base<char, std::allocator<char> >::_Vector_impl::~_Vector_impl()
000047c0 W std::_Vector_base<char, std::allocator<char> >::_Vector_impl::~_Vector_impl()
000047d8 W std::_Vector_base<char, std::allocator<char> >::_Vector_base()
000047d8 W std::_Vector_base<char, std::allocator<char> >::_Vector_base()
000047f4 W std::_Vector_base<char, std::allocator<char> >::~_Vector_base()
000047f4 W std::_Vector_base<char, std::allocator<char> >::~_Vector_base()
00004828 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 2>::setDutyCycle(float)
00004844 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 3>::setDutyCycle(float)
00004860 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 4>::setDutyCycle(float)
0000487c W USBDM::FtmChannel_T<USBDM::Ftm0Info, 5>::setDutyCycle(float)
00004898 W USBDM::QuadEncoder_T<USBDM::Ftm1Info>::getPosition()
000048b4 W USBDM::QuadEncoder_T<USBDM::Ftm2Info>::getPosition()
000048d0 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 7>::configure(USBDM::FtmChMode, USBDM::FtmChannelAction)
00004918 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 7>::setDutyCycle(int)
00004930 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 1>::configure(USBDM::FtmChMode, USBDM::FtmChannelAction)
00004978 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 1>::setDutyCycle(int)
00004990 W USBDM::PitBase_T<USBDM::PitInfo>::enable()
000049b4 W USBDM::PitBase_T<USBDM::PitInfo>::unhandledCallback()
000049c0 W USBDM::PitBase_T<USBDM::PitInfo>::configureChannel(unsigned char, float, USBDM::PitChannelIrq)
00004a54 W USBDM::PitBase_T<USBDM::PitInfo>::enableNvicInterrupts(unsigned int, bool, unsigned long)
00004ab0 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 7>::setPCR(unsigned long)
00004ad4 W USBDM::FtmBase_T<USBDM::Ftm0Info>::isEnabled()
00004b08 W USBDM::FtmBase_T<USBDM::Ftm0Info>::configure(USBDM::FtmMode, USBDM::FtmClockSource, USBDM::FtmPrescale)
00004b3c W USBDM::FtmBase_T<USBDM::Ftm0Info>::setPeriod(float)
00004c28 W USBDM::GpioBase_T<8192ul, 1074057216ul, (IRQn_Type)63, 1074786560ul, 0, (USBDM::Polarity)1>::setInput(unsigned long)
00004c4c W USBDM::GpioBase_T<8192ul, 1074057216ul, (IRQn_Type)63, 1074786560ul, 1, (USBDM::Polarity)1>::setInput(unsigned long)
00004c70 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 1>::setPCR(unsigned long)
00004c94 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 0, (USBDM::Polarity)1>::setInput(unsigned long)
00004cb8 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 1, (USBDM::Polarity)1>::setInput(unsigned long)
00004cdc W USBDM::FtmChannel_T<USBDM::Ftm0Info, 2>::configure(USBDM::FtmChMode, USBDM::FtmChannelAction)
00004d24 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 3>::configure(USBDM::FtmChMode, USBDM::FtmChannelAction)
00004d6c W USBDM::GpioBase_T<512ul, 1074040832ul, (IRQn_Type)59, 1074786304ul, 5, (USBDM::Polarity)1>::setInput(unsigned long)
00004d90 W USBDM::QuadEncoder_T<USBDM::Ftm1Info>::configure(USBDM::FtmPrescale)
00004ddc W USBDM::QuadEncoder_T<USBDM::Ftm1Info>::enableFilter(int)
00004e34 W USBDM::FtmBase_T<USBDM::Ftm1Info>::setTimerOverflowCallback(void (*)())
00004e64 W Motor<USBDM::Ftm0Info, (unsigned char)2, (unsigned char)3, 3, USBDM::Ftm1Info, USBDM::GpioA<5, (USBDM::Polarity)1> >::toiHandler()
00004e80 W USBDM::FtmBase_T<USBDM::Ftm1Info>::enableTimerOverflowInterrupts(bool)
00004eb8 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 4>::configure(USBDM::FtmChMode, USBDM::FtmChannelAction)
00004f00 W USBDM::FtmChannel_T<USBDM::Ftm0Info, 5>::configure(USBDM::FtmChMode, USBDM::FtmChannelAction)
00004f48 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)60, 1074786368ul, 3, (USBDM::Polarity)1>::setInput(unsigned long)
00004f6c W USBDM::QuadEncoder_T<USBDM::Ftm2Info>::configure(USBDM::FtmPrescale)
00004fb8 W USBDM::QuadEncoder_T<USBDM::Ftm2Info>::enableFilter(int)
00005010 W USBDM::FtmBase_T<USBDM::Ftm2Info>::setTimerOverflowCallback(void (*)())
00005040 W Motor<USBDM::Ftm0Info, (unsigned char)4, (unsigned char)5, 0, USBDM::Ftm2Info, USBDM::GpioB<3, (USBDM::Polarity)1> >::toiHandler()
0000505c W USBDM::FtmBase_T<USBDM::Ftm2Info>::enableTimerOverflowInterrupts(bool)
00005094 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 9, (USBDM::Polarity)1>::setInactive()
000050a0 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 9, (USBDM::Polarity)1>::setOut()
000050c0 W USBDM::Pcr_T<2048ul, 1074049024ul, (IRQn_Type)61, 9, 323ul>::setPCR(unsigned long)
000050e0 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 11, (USBDM::Polarity)1>::setInactive()
000050ec W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 11, (USBDM::Polarity)1>::setOut()
0000510c W USBDM::Pcr_T<2048ul, 1074049024ul, (IRQn_Type)61, 11, 323ul>::setPCR(unsigned long)
0000512c W std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
00005144 W void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
00005160 W std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
00005160 W std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
0000518c W std::allocator<int>::~allocator()
0000518c W std::allocator<int>::~allocator()
000051a4 W std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int)
000051c8 W std::_Vector_base<char, std::allocator<char> >::_Vector_impl::_Vector_impl()
000051c8 W std::_Vector_base<char, std::allocator<char> >::_Vector_impl::_Vector_impl()
000051f4 W std::_Vector_base<char, std::allocator<char> >::_M_deallocate(char*, unsigned int)
00005218 W USBDM::FtmBase_T<USBDM::Ftm0Info>::setDutyCycle(float, int)
000052e0 W USBDM::Pcr_T<4096ul, 1074053120ul, (IRQn_Type)62, 7, 1091ul>::setPCR(unsigned long)
00005300 W USBDM::FtmBase_T<USBDM::Ftm0Info>::setDutyCycle(int, int)
00005374 W USBDM::Pcr_T<2048ul, 1074049024ul, (IRQn_Type)61, 2, 1091ul>::setPCR(unsigned long)
00005394 W USBDM::PitBase_T<USBDM::PitInfo>::enableInterrupts(unsigned int, bool)
000053f8 W USBDM::FtmBase_T<USBDM::Ftm0Info>::enable()
00005418 W USBDM::FtmBase_T<USBDM::Ftm0Info>::setPeriodInTicks(unsigned long)
00005490 W USBDM::GpioBase_T<8192ul, 1074057216ul, (IRQn_Type)63, 1074786560ul, 0, (USBDM::Polarity)1>::setIn()
000054ac W USBDM::Pcr_T<8192ul, 1074057216ul, (IRQn_Type)63, 0, 323ul>::setPCR(unsigned long)
000054cc W USBDM::GpioBase_T<8192ul, 1074057216ul, (IRQn_Type)63, 1074786560ul, 1, (USBDM::Polarity)1>::setIn()
000054e8 W USBDM::Pcr_T<8192ul, 1074057216ul, (IRQn_Type)63, 1, 323ul>::setPCR(unsigned long)
00005508 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 0, (USBDM::Polarity)1>::setIn()
00005524 W USBDM::Pcr_T<2048ul, 1074049024ul, (IRQn_Type)61, 0, 323ul>::setPCR(unsigned long)
00005544 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 1, (USBDM::Polarity)1>::setIn()
00005560 W USBDM::Pcr_T<2048ul, 1074049024ul, (IRQn_Type)61, 1, 323ul>::setPCR(unsigned long)
00005580 W USBDM::GpioBase_T<512ul, 1074040832ul, (IRQn_Type)59, 1074786304ul, 5, (USBDM::Polarity)1>::setIn()
0000559c W USBDM::Pcr_T<512ul, 1074040832ul, (IRQn_Type)59, 5, 323ul>::setPCR(unsigned long)
000055bc W USBDM::FtmBase_T<USBDM::Ftm1Info>::configure(USBDM::FtmMode, USBDM::FtmClockSource, USBDM::FtmPrescale)
000055f0 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)60, 1074786368ul, 3, (USBDM::Polarity)1>::setIn()
0000560c W USBDM::Pcr_T<1024ul, 1074044928ul, (IRQn_Type)60, 3, 323ul>::setPCR(unsigned long)
0000562c W USBDM::FtmBase_T<USBDM::Ftm2Info>::configure(USBDM::FtmMode, USBDM::FtmClockSource, USBDM::FtmPrescale)
00005660 W USBDM::GpioBase_T<2048ul, 1074049024ul, (IRQn_Type)61, 1074786432ul, 11, (USBDM::Polarity)1>::clear()
00005678 W std::_Vector_base<char, std::allocator<char> >::_M_get_Tp_allocator()
00005690 W void std::_Destroy<char*, char>(char*, char*, std::allocator<char>&)
000056ac W void std::_Destroy<int*>(int*, int*)
000056c4 W std::allocator<int>::allocator()
000056c4 W std::allocator<int>::allocator()
000056dc W __gnu_cxx::new_allocator<int>::~new_allocator()
000056dc W __gnu_cxx::new_allocator<int>::~new_allocator()
000056f4 W __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned int)
0000570c W __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int)
00005724 W USBDM::FtmBase_T<USBDM::Ftm0Info>::configureAllPins()
00005730 W USBDM::FtmBase_T<USBDM::Ftm1Info>::enable()
00005750 W USBDM::FtmBase_T<USBDM::Ftm2Info>::enable()
00005770 W void std::_Destroy<char*>(char*, char*)
00005788 W void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0000579c W __gnu_cxx::new_allocator<int>::new_allocator()
0000579c W __gnu_cxx::new_allocator<int>::new_allocator()
000057b4 W USBDM::FtmBase_T<USBDM::Ftm1Info>::configureAllPins()
000057c0 W USBDM::FtmBase_T<USBDM::Ftm2Info>::configureAllPins()
000057cc W void std::_Destroy_aux<true>::__destroy<char*>(char*, char*)
000058b0 W std::vector<char, std::allocator<char> >::~vector()
000058b0 W std::vector<char, std::allocator<char> >::~vector()
00005968 T USBDM::waitMS(unsigned long)
00005a74 T USBDM::getErrorMessage(USBDM::ErrorCode)
00005aa4 T USBDM::checkError()
00005af4 T cpp_initialise
00005b00 T USBDM::enableNvicInterrupt(IRQn_Type, unsigned long)
00005b34 T operator delete(void*)
00005b3c T __aeabi_atexit
00005b46 W std::allocator<char>::allocator()
00005b46 W std::allocator<char>::allocator()
00005b48 W std::allocator<char>::~allocator()
00005b48 W std::allocator<char>::~allocator()
00005b4c T round
00005be4 T abort
00005bf4 T __assert_func
00005c2c T __cxa_atexit
00005c4c T exit
00005c74 T fiprintf
00005c74 T fprintf
00005c98 T __libc_init_array
00005ce4 T malloc
00005cf4 T free
00005d04 T memcpy
00005d16 T memset
00005d28 T _free_r
00005db0 T _malloc_r
00005e58 T _sbrk_r
00005e78 T _raise_r
00005ec8 T raise
00005ed8 T _kill_r
00005efc T _getpid_r
00005f2c T __sfputs_r
00005f50 T _vfiprintf_r
00005f50 T _vfprintf_r
00006158 T __cvt
00006218 T __exponent
00006280 W _printf_float
000066a0 T _printf_common
00006784 T _printf_i
000069ac T __swbuf_r
00006a54 T __swsetup_r
00006c50 T _dtoa_r
000077c0 T __sflush_r
000078c8 T _fflush_r
0000791c T _cleanup_r
00007998 T __sfmoreglue
000079c4 T __sinit
00007a24 T __sfp
00007a98 T _localeconv_r
00007aa0 T __smakebuf_r
00007b3c T memchr
00007b5a T _Balloc
00007bc4 T _Bfree
00007bf2 T __multadd
00007c66 T __hi0bits
00007ca6 T __lo0bits
00007d00 T __i2b
00007d12 T __multiply
00007e44 T __pow5mult
00007ee0 T __lshift
00007f86 T __mcmp
00007fc0 T __mdiff
00008000 A __heap_size__
00008000 A __stack_size__
0000807c T __d2b
0000811c T _calloc_r
00008138 T __fpclassifyd
00008180 T __sread
000081a2 T __swrite
000081da T __sseek
000081fe T __sclose
00008206 T strlen
00008218 T _write_r
0000823c T _close_r
0000825c T _fstat_r
00008280 T _isatty_r
000082a0 T _lseek_r
000082c4 T _read_r
00008848 V vtable for USBDM::Uart_brfa_T<USBDM::Uart0Info>
00008878 V vtable for USBDM::Uart_T<USBDM::Uart0Info>
000088a8 V vtable for USBDM::Uart
000088d8 V vtable for USBDM::FormattedIO
00008900 T USBDM::Mcg::clockInfo
00008aa4 V USBDM::PitBase_T<USBDM::PitInfo>::enableNvicInterrupts(unsigned int, bool, unsigned long)::irqNums
00008d38 T _global_impure_ptr
00008d90 T __sf_fake_stdin
00008db0 T __sf_fake_stdout
00008dd0 T __sf_fake_stderr
00008df8 T __mprec_tens
00008ec0 T __mprec_bigtens
00008ef4 T _init
00008f00 T _fini
00008f0c T __CTOR_END__
00008f0c T __CTOR_LIST__
00008f0c T __DTOR_END__
00008f0c T __DTOR_LIST__
00008f34 R __etext
1fff0000 D __DATA_RAM
1fff0000 D __data_start__
1fff0000 D __dso_handle
1fff0000 D __VECTOR_RAM__
1fff0000 D _mtb_end
1fff0000 D _mtb_start
1fff0004 V SystemCoreClock
1fff0008 V SystemBusClock
1fff000c D currentTrackedState
1fff0010 V USBDM::FtmBase_T<USBDM::Ftm1Info>::sToiCallback
1fff0014 V USBDM::FtmBase_T<USBDM::Ftm2Info>::sToiCallback
1fff00b4 D _impure_ptr
1fff00f0 B __bss_start__
1fff00f0 D __data_end__
1fff00f0 B __START_BSS
1fff010c B USBDM::console
1fff0120 B USBDM::SystemMcgffClock
1fff0124 B USBDM::SystemMcgOutClock
1fff0128 B USBDM::SystemMcgFllClock
1fff012c B USBDM::SystemMcgPllClock
1fff0130 B USBDM::SystemCoreClock
1fff0134 B USBDM::SystemBusClock
1fff0138 B USBDM::SystemLpoClock
1fff013c B USBDM::Mcg::currentClockMode
1fff0144 V USBDM::PitChannel_T<USBDM::PitInfo, 0>::callback
1fff0148 V USBDM::PitChannel_T<USBDM::PitInfo, 1>::callback
1fff014c V USBDM::PitChannel_T<USBDM::PitInfo, 2>::callback
1fff0150 V USBDM::PitChannel_T<USBDM::PitInfo, 3>::callback
1fff0154 B interpretedActions
1fff0160 B readCommands
1fff0170 B pid1
1fff0828 B pid2
1fff0ee0 B USBDM::errorCode
1fff0ee4 B __malloc_sbrk_start
1fff0ee8 B __malloc_free_list
1fff0eec B errno
1fff0ef0 B __bss_end__
1fff0ef0 B __END_BSS
1fff0ef0 B __heap_addr
1fff0ef0 B __HeapBase
20008000 B __HeapLimit
20008000 B __StackLimit
20010000 B __stack
20010000 B __StackTop
